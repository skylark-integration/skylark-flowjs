/**
 * skylark-flowjs - A version of flowjs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-flowjs/
 * @license MIT
 */
define(["skylark-langx/langx","./flowjs","./utils"],function(t,e,s){"use strict";var i=s.each,h=s.evalOpts,r=s.extend;function n(t,e,s){this.flowObj=t,this.fileObj=e,this.offset=s,this.tested=!1,this.retries=0,this.pendingRetry=!1,this.preprocessState=0,this.readState=0,this.loaded=0,this.total=0,this.chunkSize=this.flowObj.opts.chunkSize,this.startByte=this.offset*this.chunkSize,this.computeEndByte=function(){var t=Math.min(this.fileObj.size,(this.offset+1)*this.chunkSize);return this.fileObj.size-t<this.chunkSize&&!this.flowObj.opts.forceChunkSize&&(t=this.fileObj.size),t},this.endByte=this.computeEndByte(),this.xhr=null;var i=this;this.event=function(t,e){(e=Array.prototype.slice.call(arguments)).unshift(i),i.fileObj.chunkEvent.apply(i.fileObj,e)},this.progressHandler=function(t){t.lengthComputable&&(i.loaded=t.loaded,i.total=t.total),i.event("progress",t)},this.testHandler=function(t){var e=i.status(!0);"error"===e?(i.event(e,i.message()),i.flowObj.uploadNextChunk()):"success"===e?(i.tested=!0,i.event(e,i.message()),i.flowObj.uploadNextChunk()):i.fileObj.paused||(i.tested=!0,i.send())},this.doneHandler=function(t){var e=i.status();if("success"===e||"error"===e)delete this.data,i.event(e,i.message()),i.flowObj.uploadNextChunk();else{i.event("retry",i.message()),i.pendingRetry=!0,i.abort(),i.retries++;var s=i.flowObj.opts.chunkRetryInterval;null!==s?setTimeout(function(){i.send()},s):i.send()}}}return n.prototype={getParams:function(){return{flowChunkNumber:this.offset+1,flowChunkSize:this.flowObj.opts.chunkSize,flowCurrentChunkSize:this.endByte-this.startByte,flowTotalSize:this.fileObj.size,flowIdentifier:this.fileObj.uniqueIdentifier,flowFilename:this.fileObj.name,flowRelativePath:this.fileObj.relativePath,flowTotalChunks:this.fileObj.chunks.length}},getTarget:function(t,e){return t.indexOf("?")<0?t+="?":t+="&",t+e.join("&")},test:function(){this.xhr=new XMLHttpRequest,this.xhr.addEventListener("load",this.testHandler,!1),this.xhr.addEventListener("error",this.testHandler,!1);var t=h(this.flowObj.opts.testMethod,this.fileObj,this),e=this.prepareXhrRequest(t,!0);this.xhr.send(e)},preprocessFinished:function(){this.endByte=this.computeEndByte(),this.preprocessState=2,this.send()},readFinished:function(t){this.readState=2,this.bytes=t,this.send()},send:function(){var t=this.flowObj.opts.preprocess,e=this.flowObj.opts.readFileFn;if("function"==typeof t)switch(this.preprocessState){case 0:return this.preprocessState=1,void t(this);case 1:return}switch(this.readState){case 0:return this.readState=1,void e(this.fileObj,this.startByte,this.endByte,this.fileObj.file.type,this);case 1:return}if(!this.flowObj.opts.testChunks||this.tested){this.loaded=0,this.total=0,this.pendingRetry=!1,this.xhr=new XMLHttpRequest,this.xhr.upload.addEventListener("progress",this.progressHandler,!1),this.xhr.addEventListener("load",this.doneHandler,!1),this.xhr.addEventListener("error",this.doneHandler,!1);var s=h(this.flowObj.opts.uploadMethod,this.fileObj,this),i=this.prepareXhrRequest(s,!1,this.flowObj.opts.method,this.bytes);this.xhr.send(i)}else this.test()},abort:function(){var t=this.xhr;this.xhr=null,t&&t.abort()},status:function(t){return 1===this.readState?"reading":this.pendingRetry||1===this.preprocessState?"uploading":this.xhr?this.xhr.readyState<4?"uploading":this.flowObj.opts.successStatuses.indexOf(this.xhr.status)>-1?"success":this.flowObj.opts.permanentErrors.indexOf(this.xhr.status)>-1||!t&&this.retries>=this.flowObj.opts.maxChunkRetries?"error":(this.abort(),"pending"):"pending"},message:function(){return this.xhr?this.xhr.responseText:""},progress:function(){if(this.pendingRetry)return 0;var t=this.status();return"success"===t||"error"===t?1:"pending"===t?0:this.total>0?this.loaded/this.total:0},sizeUploaded:function(){var t=this.endByte-this.startByte;return"success"!==this.status()&&(t=this.progress()*t),t},prepareXhrRequest:function(t,e,s,n){var o=h(this.flowObj.opts.query,this.fileObj,this,e);o=r(o||{},this.getParams());var a=h(this.flowObj.opts.target,this.fileObj,this,e),l=null;if("GET"===t||"octet"===s){var d=[];i(o,function(t,e){d.push([encodeURIComponent(e),encodeURIComponent(t)].join("="))}),a=this.getTarget(a,d),l=n||null}else l=new FormData,i(o,function(t,e){l.append(e,t)}),void 0!==n&&l.append(this.flowObj.opts.fileParameterName,n,this.fileObj.file.name);return this.xhr.open(t,a,!0),this.xhr.withCredentials=this.flowObj.opts.withCredentials,i(h(this.flowObj.opts.headers,this.fileObj,this,e),function(t,e){this.xhr.setRequestHeader(e,t)},this),l}},e.FlowChunk=n});
//# sourceMappingURL=sourcemaps/FlowChunk.js.map
